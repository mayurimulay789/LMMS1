const mongoose = require("mongoose")

const certificateSchema = new mongoose.Schema(
  {
    certificateId: {
      type: String,
      required: true,
      unique: true, // unique automatically creates an index
    },
    certificateNumber: {
      type: String,
      required: true,
      unique: true,
    },
    user: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    course: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Course",
      required: true,
    },
    enrollment: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Enrollment",
      required: true,
    },
    studentName: {
      type: String,
      required: true,
    },
    courseName: {
      type: String,
      required: true,
    },
    instructor: {
      type: String,
      required: true,
    },
    completionDate: {
      type: Date,
      required: true,
    },
    issueDate: {
      type: Date,
      default: Date.now,
    },
    grade: {
      type: String,
      enum: ["A+", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D", "F"],
      default: "B+",
    },
    finalScore: {
      type: Number,
      min: 0,
      max: 100,
      default: 85,
    },
    hoursCompleted: {
      type: Number,
      default: 0,
    },
    skills: [
      {
        type: String,
      },
    ],
    pdfPath: {
      type: String,
      required: true,
    },
    pdfUrl: {
      type: String,
      required: true,
    },
    verificationUrl: {
      type: String,
      required: true,
    },
    qrCodeData: {
      type: String,
    },
    isValid: {
      type: Boolean,
      default: true,
    },
    metadata: {
      ipAddress: String,
      userAgent: String,
      autoGenerated: {
        type: Boolean,
        default: false,
      },
      triggeredBy: String,
      revokedAt: Date,
      revokeReason: String,
      verificationCount: {
        type: Number,
        default: 0,
      },
      lastVerifiedAt: Date,
    },
  },
  {
    timestamps: true,
  },
)

// âœ… Keep only the useful extra indexes
certificateSchema.index({ user: 1, course: 1 })
certificateSchema.index({ isValid: 1 })
certificateSchema.index({ createdAt: -1 })

// Generate certificate number before saving
certificateSchema.pre("save", function (next) {
  if (!this.certificateNumber) {
    const year = new Date().getFullYear()
    const month = String(new Date().getMonth() + 1).padStart(2, "0")
    const random = Math.random().toString(36).substr(2, 6).toUpperCase()
    this.certificateNumber = `CERT-${year}${month}-${random}`
  }
  next()
})

module.exports = mongoose.model("Certificate", certificateSchema)
